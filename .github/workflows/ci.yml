name: CI

on:
  pull_request_target:
    branches:
      - main  # 触发的目标分支

permissions:
  pull-requests: write  # 确保有权限发表评论等

jobs:
  job1:
    name: Check Not Allowed File Changes
    runs-on: ubuntu-latest
    outputs:
      markdown_change: ${{ steps.filter_markdown.outputs.change }}
      markdown_files: ${{ steps.filter_markdown.outputs.change_files }}
    steps:
      # 检查是否有不允许的文件（如 package-lock.json 等）
      - name: Check Not Allowed File Changes
        uses: dorny/paths-filter@v2
        id: filter_not_allowed
        with:
          list-files: json
          filters: |
            change:
              - 'package-lock.json'
              - 'yarn.lock'
              - 'pnpm-lock.yaml'

      - name: Comment About Changes We Can't Accept
        if: ${{ steps.filter_not_allowed.outputs.change == 'true' }}
        uses: actions/github-script@v6
        with:
          script: |
            let workflowFailMessage = "It looks like you've modified some files that we can't accept as contributions."
            try {
              const badFilesArr = [
                'package-lock.json',
                'yarn.lock',
                'pnpm-lock.yaml',
              ]
              const badFiles = badFilesArr.join('\n- ')
              const reviewMessage = `👋 Hey there spelunker. It looks like you've modified some files that we can't accept as contributions. The complete list of files we can't accept are:\n- ${badFiles}\n\nYou'll need to revert all of the files you changed in that list using [GitHub Desktop](https://docs.github.com/en/free-pro-team@latest/desktop/contributing-and-collaborating-using-github-desktop/managing-commits/reverting-a-commit) or \`git checkout origin/main <file name>\`. Once you get those files reverted, we can continue with the review process. :octocat:\n\nMore discussion:\n- https://github.com/electron-vite/electron-vite-vue/issues/192`
              createdComment = await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.number,
                body: reviewMessage,
              })
              workflowFailMessage = `${workflowFailMessage} Please see ${createdComment.data.html_url} for details.`
            } catch(err) {
              console.log("Error creating comment.", err)
            }
            core.setFailed(workflowFailMessage)

      # 检查 Markdown 文件是否有修改
      - name: Check Not Linted Markdown
        if: ${{ always() }}
        uses: dorny/paths-filter@v2
        id: filter_markdown
        with:
          list-files: shell
          filters: |
            change:
              - added|modified: '*.md'  # 检查是否有 Markdown 文件的修改或新增

  job2:
    name: Lint Markdown
    runs-on: ubuntu-latest
    needs: job1
    if: ${{ always() && needs.job1.outputs.markdown_change == 'true' }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Lint markdown
        run: npx markdownlint-cli ${{ needs.job1.outputs.markdown_files }} --ignore node_modules

  job3:
    name: Build Application
    runs-on: ubuntu-latest
    needs: job2
    if: ${{ always() && needs.job2.result == 'success' }}  # Build only if lint passed
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install Dependencies
        run: npm install

      - name: Build Application
        run: npm run build  # 确保你在 package.json 中有定义 build 脚本

      - name: List Release Directory
        run: ls -R release/  # 检查构建产物是否生成

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.version }}
          name: "Release v${{ env.version }}"
          body: |
            Changes in this Release:
            - First release for testing
          draft: true
          prerelease: false
          files: release/${{ env.version }}/HSMod-Mac-${{ env.version }}-Installer.dmg, release/${{ env.version }}/HSMod-Windows-${{ env.version }}-Setup.exe

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: ./dist  # 根据构建输出目录调整
